Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: '\n'
    4     | exp '\n'

    5 exp: NUM
    6    | exp exp '+'
    7    | exp exp '-'
    8    | exp exp '*'
    9    | exp exp '/'
   10    | exp exp '^'
   11    | exp 'n'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4
'*' (42) 8
'+' (43) 6
'-' (45) 7
'/' (47) 9
'^' (94) 10
'n' (110) 11
error (256)
NUM (258) 5


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
input (12)
    on left: 1 2, on right: 0 2
line (13)
    on left: 3 4, on right: 2
exp (14)
    on left: 5 6 7 8 9 10 11, on right: 4 6 7 8 9 10 11


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input line

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line
    3 line: . '\n'
    4     | . exp '\n'
    5 exp: . NUM
    6    | . exp exp '+'
    7    | . exp exp '-'
    8    | . exp exp '*'
    9    | . exp exp '/'
   10    | . exp exp '^'
   11    | . exp 'n'

    $end  shift, and go to state 2
    NUM   shift, and go to state 3
    '\n'  shift, and go to state 4

    line  go to state 5
    exp   go to state 6


State 2

    0 $accept: input $end .

    $default  accept


State 3

    5 exp: NUM .

    $default  reduce using rule 5 (exp)


State 4

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 5

    2 input: input line .

    $default  reduce using rule 2 (input)


State 6

    4 line: exp . '\n'
    5 exp: . NUM
    6    | . exp exp '+'
    6    | exp . exp '+'
    7    | . exp exp '-'
    7    | exp . exp '-'
    8    | . exp exp '*'
    8    | exp . exp '*'
    9    | . exp exp '/'
    9    | exp . exp '/'
   10    | . exp exp '^'
   10    | exp . exp '^'
   11    | . exp 'n'
   11    | exp . 'n'

    NUM   shift, and go to state 3
    '\n'  shift, and go to state 7
    'n'   shift, and go to state 8

    exp  go to state 9


State 7

    4 line: exp '\n' .

    $default  reduce using rule 4 (line)


State 8

   11 exp: exp 'n' .

    $default  reduce using rule 11 (exp)


State 9

    5 exp: . NUM
    6    | . exp exp '+'
    6    | exp . exp '+'
    6    | exp exp . '+'
    7    | . exp exp '-'
    7    | exp . exp '-'
    7    | exp exp . '-'
    8    | . exp exp '*'
    8    | exp . exp '*'
    8    | exp exp . '*'
    9    | . exp exp '/'
    9    | exp . exp '/'
    9    | exp exp . '/'
   10    | . exp exp '^'
   10    | exp . exp '^'
   10    | exp exp . '^'
   11    | . exp 'n'
   11    | exp . 'n'

    NUM  shift, and go to state 3
    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    '*'  shift, and go to state 12
    '/'  shift, and go to state 13
    '^'  shift, and go to state 14
    'n'  shift, and go to state 8

    exp  go to state 9


State 10

    6 exp: exp exp '+' .

    $default  reduce using rule 6 (exp)


State 11

    7 exp: exp exp '-' .

    $default  reduce using rule 7 (exp)


State 12

    8 exp: exp exp '*' .

    $default  reduce using rule 8 (exp)


State 13

    9 exp: exp exp '/' .

    $default  reduce using rule 9 (exp)


State 14

   10 exp: exp exp '^' .

    $default  reduce using rule 10 (exp)
